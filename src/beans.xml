<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:task="http://www.springframework.org/schema/task" 
	xsi:schemaLocation="http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd 
	http://www.springframework.org/schema/mvc 
	http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd 
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.0.xsd 
	http://www.springframework.org/schema/aop 
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/task  
	http://www.springframework.org/schema/task/spring-task-3.2.xsd  
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd ">							
	  <!-- 开启注解配置 -->  
	<context:component-scan base-package="com.hot">      
	 <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
	</context:component-scan>
		<aop:aspectj-autoproxy/>
 	<context:property-placeholder location="classpath:data.properties" />  
 	
 	<bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
       <!-- <property name="maxActive" value="50" />
        <property name="maxIdle" value="8" />
        <property name="maxWait" value="1000" />
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>-->
        <!-- <property name="testWhileIdle" value="true"/> -->
        <property name="maxIdle" value="8" />
        <property name="testOnBorrow" value="true"/>
        <property name="testOnReturn" value="true"/>
    </bean>

    <bean id="shardedJedisPool" class="redis.clients.jedis.ShardedJedisPool"  scope="singleton">
        <constructor-arg index="0" ref="jedisPoolConfig" />
        <constructor-arg index="1">
            <list>
                <bean class="redis.clients.jedis.JedisShardInfo">
                     <constructor-arg index="0" value="${redis.host}"/>	   
		          <constructor-arg index="1" value="${redis.port}" type="int"/>
		          <constructor-arg index="2" value="${redis.timeout}" type="int"/>
                </bean>
            </list>
        </constructor-arg>
    </bean>
    <bean name="redisDataSource" class="com.hot.redis.RedisDataSourceImpl" >
		<property name="shardedJedisPool" ref="shardedJedisPool"></property> 
	</bean>
	<bean id="redisUtil" class="com.hot.redis.RedisUtil">
		<property name="redisDataSource" ref="redisDataSource"></property> 
     </bean>
 	
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClass}"></property>
		<property name="url" value="${jdbc.jdbcUrl}"></property>
		<property name="username" value="${jdbc.user}"></property>
		<property name="password" value="${jdbc.password}"></property>
				<!-- 初始化连接大小 -->
		<property name="initialSize" value="0" />
		<!-- 连接池最大使用连接数量 -->
		<property name="maxActive" value="20" />
		<!-- 连接池最大空闲 -->
		<property name="maxIdle" value="20" />
		<!-- 连接池最小空闲 -->
		<property name="minIdle" value="0" />
		<!-- 获取连接最大等待时间 -->
		<property name="maxWait" value="60" /> 
	</bean>
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource"></property>
		<property name="configLocation" value="classpath:sqlMapConfig.xml"></property>
	</bean>

   <!-- 配置事务管理器 -->
  <bean name="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">    
          <property name="dataSource" ref="dataSource"></property>
    </bean>    
   <tx:advice id="txAdvice" transaction-manager="transactionManager">
    <tx:attributes>  
            <tx:method name="save*" propagation="REQUIRED" />  
            <tx:method name="insert*" propagation="REQUIRED" />  
            <tx:method name="del*" propagation="REQUIRED" />  
            <tx:method name="update*" propagation="REQUIRED" />  
            <tx:method name="*" read-only="true" />  
        </tx:attributes>  
  </tx:advice>

  <aop:config>    
    <aop:pointcut id="allManagerMethod" expression="execution( * com.hot.service.*.*(..))" /> <!--把事务控制在Service层-->
    <aop:advisor pointcut-ref="allManagerMethod" advice-ref="txAdvice" />
    <aop:aspect ref="testAspect">  
    </aop:aspect>  
  </aop:config>
    
  
  <bean id="utilService" class="com.hot.service.UtilService"    autowire="byName"/><!--草，就是因为少了这段代码导致事务无效，害我整整搞了3天才弄好。。。。。。  -->
  
      <!-- 拦截器 
        <mvc:interceptors>  
            <mvc:interceptor>  
               <mvc:mapping path="/private/*/*" />
               <bean class="com.Nrb.interceptor.CheckLogin"></bean>  
            </mvc:interceptor>  
        </mvc:interceptors>  
        -->  


</beans>
